[{"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\index.js":"1","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\App.js":"2","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Footer.js":"4","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\RouteControl.js":"5","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Nav.js":"6","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Home.js":"7","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Library.js":"8","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Book.js":"9","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Contact.js":"10","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Register.js":"11","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\PrivateRoute.js":"12","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\book.js":"13","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\types.js":"14","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\store.js":"15","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\index.js":"16","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\auth.js":"17","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\error.js":"18","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\message.js":"19","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\book.js":"20","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\message.js":"21","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Preloader.js":"22","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\category.js":"23","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\category.js":"24","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\exco.js":"25","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\exco.js":"26","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\auth.js":"27","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\error.js":"28","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Alert.js":"29","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageGenre.js":"30","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageBooks.js":"31","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\AdMain.js":"32","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Dashboard.js":"33","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Login.js":"34","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageExcos.js":"35","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateEvent.js":"36","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateExco.js":"37","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateGenre.js":"38","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateBook.js":"39","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\RegisterUser.js":"40","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageEvent.js":"41","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\event.js":"42","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\event.js":"43","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Profile.js":"44","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\ManageProfile.js":"45","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\user.js":"46","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\user.js":"47","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageUsers.js":"48","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageMembers.js":"49","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\TablePreloader.js":"50","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageContact.js":"51","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManagePrayers.js":"52","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\PageNotFound.js":"53","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\index.js":"54","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reportWebVitals.js":"55","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\App.js":"56","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\store.js":"57","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\routes\\RouteControl.js":"58","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\forms\\Contact.js":"59","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Library.js":"60","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Alert.js":"61","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Home.js":"62","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\routes\\PrivateRoute.js":"63","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\forms\\Register.js":"64","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\PageNotFound.js":"65","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageUsers.js":"66","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageEvent.js":"67","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageGenre.js":"68","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageContact.js":"69","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageExcos.js":"70","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageBooks.js":"71","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageMembers.js":"72","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManagePrayers.js":"73","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\Dashboard.js":"74","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\Profile.js":"75","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\Login.js":"76","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\constants.js":"77","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\Book.js":"78","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\Preloader.js":"79","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Nav.js":"80","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Footer.js":"81","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\AdMain.js":"82","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\book.js":"83","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\exco.js":"84","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\event.js":"85","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\auth.js":"86","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\category.js":"87","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\TablePreloader.js":"88","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\user.js":"89","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\index.js":"90","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\types.js":"91","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\message.js":"92","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\error.js":"93","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\check.js":"94","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateBook.js":"95","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateGenre.js":"96","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateEvent.js":"97","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateExco.js":"98","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\RegisterUser.js":"99","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\ManageProfile.js":"100","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\message.js":"101","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\error.js":"102","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\auth.js":"103","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\book.js":"104","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\category.js":"105","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\user.js":"106","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\exco.js":"107","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\event.js":"108"},{"size":504,"mtime":1611952106828,"results":"109","hashOfConfig":"110"},{"size":2606,"mtime":1612785947789,"results":"111","hashOfConfig":"110"},{"size":362,"mtime":1606174160826,"results":"112","hashOfConfig":"110"},{"size":1298,"mtime":1611870432164,"results":"113","hashOfConfig":"110"},{"size":598,"mtime":1607625236935,"results":"114","hashOfConfig":"110"},{"size":3540,"mtime":1611787703284,"results":"115","hashOfConfig":"110"},{"size":14386,"mtime":1612047781469,"results":"116","hashOfConfig":"110"},{"size":4628,"mtime":1612056918290,"results":"117","hashOfConfig":"110"},{"size":3527,"mtime":1612056421265,"results":"118","hashOfConfig":"110"},{"size":7315,"mtime":1612723836790,"results":"119","hashOfConfig":"110"},{"size":5377,"mtime":1612724027844,"results":"120","hashOfConfig":"110"},{"size":612,"mtime":1612038768695,"results":"121","hashOfConfig":"110"},{"size":3503,"mtime":1612064669821,"results":"122","hashOfConfig":"110"},{"size":1983,"mtime":1612784004194,"results":"123","hashOfConfig":"110"},{"size":401,"mtime":1611698491289,"results":"124","hashOfConfig":"110"},{"size":460,"mtime":1612378990520,"results":"125","hashOfConfig":"110"},{"size":1906,"mtime":1612784222558,"results":"126","hashOfConfig":"110"},{"size":409,"mtime":1611971385513,"results":"127","hashOfConfig":"110"},{"size":317,"mtime":1611971929109,"results":"128","hashOfConfig":"110"},{"size":1814,"mtime":1612063797167,"results":"129","hashOfConfig":"110"},{"size":161,"mtime":1611971795940,"results":"130","hashOfConfig":"110"},{"size":2666,"mtime":1612782719588,"results":"131","hashOfConfig":"110"},{"size":2078,"mtime":1612107438033,"results":"132","hashOfConfig":"110"},{"size":977,"mtime":1612050104747,"results":"133","hashOfConfig":"110"},{"size":1174,"mtime":1612059290410,"results":"134","hashOfConfig":"110"},{"size":2762,"mtime":1612059167400,"results":"135","hashOfConfig":"110"},{"size":3772,"mtime":1612725601585,"results":"136","hashOfConfig":"110"},{"size":182,"mtime":1611698796151,"results":"137","hashOfConfig":"110"},{"size":2760,"mtime":1612725591912,"results":"138","hashOfConfig":"110"},{"size":4635,"mtime":1612057881068,"results":"139","hashOfConfig":"110"},{"size":9759,"mtime":1612782800026,"results":"140","hashOfConfig":"110"},{"size":10639,"mtime":1612725428301,"results":"141","hashOfConfig":"110"},{"size":4221,"mtime":1612722576824,"results":"142","hashOfConfig":"110"},{"size":3103,"mtime":1612038944610,"results":"143","hashOfConfig":"110"},{"size":7779,"mtime":1612061116831,"results":"144","hashOfConfig":"110"},{"size":3731,"mtime":1612102869277,"results":"145","hashOfConfig":"110"},{"size":3069,"mtime":1612102890619,"results":"146","hashOfConfig":"110"},{"size":2242,"mtime":1612102906238,"results":"147","hashOfConfig":"110"},{"size":4217,"mtime":1612102825651,"results":"148","hashOfConfig":"110"},{"size":6279,"mtime":1612383305095,"results":"149","hashOfConfig":"110"},{"size":9199,"mtime":1612724200161,"results":"150","hashOfConfig":"110"},{"size":937,"mtime":1612057773525,"results":"151","hashOfConfig":"110"},{"size":2071,"mtime":1612055199464,"results":"152","hashOfConfig":"110"},{"size":1755,"mtime":1612464935966,"results":"153","hashOfConfig":"110"},{"size":6714,"mtime":1612783897768,"results":"154","hashOfConfig":"110"},{"size":1124,"mtime":1612464104243,"results":"155","hashOfConfig":"110"},{"size":2698,"mtime":1612784155109,"results":"156","hashOfConfig":"110"},{"size":11707,"mtime":1612474543091,"results":"157","hashOfConfig":"110"},{"size":5622,"mtime":1612722375357,"results":"158","hashOfConfig":"110"},{"size":559,"mtime":1612718445977,"results":"159","hashOfConfig":"110"},{"size":3602,"mtime":1612724164048,"results":"160","hashOfConfig":"110"},{"size":3533,"mtime":1612725218034,"results":"161","hashOfConfig":"110"},{"size":605,"mtime":1612786389073,"results":"162","hashOfConfig":"110"},{"size":520,"mtime":1613094670068,"results":"163","hashOfConfig":"164"},{"size":375,"mtime":1613094670084,"results":"165","hashOfConfig":"164"},{"size":2687,"mtime":1613288298979,"results":"166","hashOfConfig":"164"},{"size":401,"mtime":1613094671203,"results":"167","hashOfConfig":"164"},{"size":598,"mtime":1613094670086,"results":"168","hashOfConfig":"164"},{"size":7379,"mtime":1613619882740,"results":"169","hashOfConfig":"164"},{"size":4661,"mtime":1613898906480,"results":"170","hashOfConfig":"164"},{"size":2760,"mtime":1613094670069,"results":"171","hashOfConfig":"164"},{"size":14657,"mtime":1613394476914,"results":"172","hashOfConfig":"164"},{"size":612,"mtime":1613094670085,"results":"173","hashOfConfig":"164"},{"size":5442,"mtime":1613896454930,"results":"174","hashOfConfig":"164"},{"size":726,"mtime":1613156399128,"results":"175","hashOfConfig":"164"},{"size":11818,"mtime":1613617498898,"results":"176","hashOfConfig":"164"},{"size":9226,"mtime":1613617256850,"results":"177","hashOfConfig":"164"},{"size":4661,"mtime":1613617310637,"results":"178","hashOfConfig":"164"},{"size":3763,"mtime":1613617210759,"results":"179","hashOfConfig":"164"},{"size":7805,"mtime":1613617282998,"results":"180","hashOfConfig":"164"},{"size":9812,"mtime":1613617001487,"results":"181","hashOfConfig":"164"},{"size":5782,"mtime":1613617417480,"results":"182","hashOfConfig":"164"},{"size":3628,"mtime":1613622060983,"results":"183","hashOfConfig":"164"},{"size":4221,"mtime":1613094669747,"results":"184","hashOfConfig":"164"},{"size":1755,"mtime":1613094669750,"results":"185","hashOfConfig":"164"},{"size":3103,"mtime":1613094669749,"results":"186","hashOfConfig":"164"},{"size":121,"mtime":1613899843878,"results":"187","hashOfConfig":"164"},{"size":3591,"mtime":1613394459493,"results":"188","hashOfConfig":"164"},{"size":2759,"mtime":1613284802730,"results":"189","hashOfConfig":"164"},{"size":3543,"mtime":1613284875233,"results":"190","hashOfConfig":"164"},{"size":1298,"mtime":1613094670070,"results":"191","hashOfConfig":"164"},{"size":10642,"mtime":1613135607064,"results":"192","hashOfConfig":"164"},{"size":3601,"mtime":1613898170154,"results":"193","hashOfConfig":"164"},{"size":2848,"mtime":1613298704513,"results":"194","hashOfConfig":"164"},{"size":2158,"mtime":1613756374321,"results":"195","hashOfConfig":"164"},{"size":3898,"mtime":1613895813865,"results":"196","hashOfConfig":"164"},{"size":2242,"mtime":1613756349395,"results":"197","hashOfConfig":"164"},{"size":525,"mtime":1613135795808,"results":"198","hashOfConfig":"164"},{"size":2784,"mtime":1613298739149,"results":"199","hashOfConfig":"164"},{"size":460,"mtime":1613094670083,"results":"200","hashOfConfig":"164"},{"size":1983,"mtime":1613094669697,"results":"201","hashOfConfig":"164"},{"size":161,"mtime":1613094669696,"results":"202","hashOfConfig":"164"},{"size":182,"mtime":1613094669693,"results":"203","hashOfConfig":"164"},{"size":97,"mtime":1613616365309,"results":"204","hashOfConfig":"164"},{"size":4586,"mtime":1613616746365,"results":"205","hashOfConfig":"164"},{"size":2242,"mtime":1613094669759,"results":"206","hashOfConfig":"164"},{"size":3731,"mtime":1613094669754,"results":"207","hashOfConfig":"164"},{"size":3069,"mtime":1613094669757,"results":"208","hashOfConfig":"164"},{"size":6279,"mtime":1613094669761,"results":"209","hashOfConfig":"164"},{"size":6714,"mtime":1613094669760,"results":"210","hashOfConfig":"164"},{"size":317,"mtime":1613094670083,"results":"211","hashOfConfig":"164"},{"size":409,"mtime":1613094670079,"results":"212","hashOfConfig":"164"},{"size":1906,"mtime":1613094670077,"results":"213","hashOfConfig":"164"},{"size":1805,"mtime":1613896631702,"results":"214","hashOfConfig":"164"},{"size":977,"mtime":1613094670079,"results":"215","hashOfConfig":"164"},{"size":1124,"mtime":1613094670084,"results":"216","hashOfConfig":"164"},{"size":1174,"mtime":1613094670081,"results":"217","hashOfConfig":"164"},{"size":937,"mtime":1613094670080,"results":"218","hashOfConfig":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},"1w375in",{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"221"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"221"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"221"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"221"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},"1pn1qz2",{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"332"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"332"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"332"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"332"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"332"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"332"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"332"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"332"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\index.js",[],["448","449"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\App.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Footer.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\RouteControl.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Nav.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Home.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Library.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Contact.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Register.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\store.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\auth.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\error.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\message.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\message.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Preloader.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\category.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\category.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\exco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\exco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\auth.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\error.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Alert.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageGenre.js",["450"],"import {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getCategories, deleteGenre, updateGenre } from '../actions/category';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport Preloader from '../content/Preloader';\r\n\r\n\r\nconst ManageGenre = ({genres, getCategories, deleteGenre, updateGenre}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [name, setName] = useState('');\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [currentGenre, setCurrentGenre] = useState('');\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Manage Genre';\r\n        getCategories();\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    const setActiveEvent = (id) => {\r\n        setShow(true);\r\n        setCurrentGenre(id);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (name === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in the blank field'\r\n            })\r\n        }else{\r\n            let genreData = {};\r\n\r\n            if (name){\r\n                genreData['name'] = name;\r\n            }\r\n\r\n            updateGenre(currentGenre, genreData);\r\n\r\n            setTimeout(() => {\r\n                setName('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n            title: `Are you sure?`,\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: false\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteGenre(id);\r\n            }\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                genres?.map(genre => \r\n                    <div key={genre.id} className=\"my-admin-card shadow-sm\">\r\n                        <div className='text-center mb-2'>\r\n                            <small >Genre</small>\r\n                        </div>\r\n                        <h3 className=\"card-text text-center text-dark text-capitalize\">\r\n                            {genre.name}\r\n                        </h3>\r\n                        <div className='my-admin-card-overlay mt-4'>\r\n                            <button className='' onClick={() => setActiveEvent(genre.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                            <button className='bg-danger' onClick={() => handleDelete(genre.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        Update Genre id:- {currentGenre}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='creategenre-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Name</label>\r\n                            <input className='early-input' onChange={e => setName(e.target.value)} type=\"text\" value={name} />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='creategenre-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n \r\n\r\nconst mapStateToProps = state => ({\r\n    genres: state.category.categories\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getCategories, deleteGenre, updateGenre})(ManageGenre);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageBooks.js",["451"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\AdMain.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Dashboard.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Login.js",["452"],"import {useState, useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\n\r\nimport {loadUser} from '../../actions/auth';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport '../styles/login.css';\r\n\r\n\r\n\r\nconst Login = ({login, loadUser, isAuthenticated}) => {\r\n    let [username, setUsername] = useState('');\r\n    let [password, setPassword] = useState('');\r\n    let [submitted, setSubmitted] = useState(false);\r\n    let [toggleReveal, setReveal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Admin Login';\r\n        loadUser();\r\n    }, [submitted]);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (username === '' || password === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: `Please fill in all fields`\r\n            });\r\n        }else{\r\n            login({username, password});\r\n            setSubmitted(true);\r\n        }\r\n    }\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/admin-dashboard' />\r\n    return (\r\n        <section className='login-wrapper'>\r\n            <form className='login-form' onSubmit={handleSubmit}>\r\n                <div className=\"login-form-header text-center\">\r\n                    <h1 className='login-form-header-text text-dark'>Word Study</h1>\r\n                    <small className='login-form-header-sub-text text-muted'>Admin Portal</small>\r\n                </div>\r\n\r\n                <div className=\"form-sect\">\r\n                    <label htmlFor=\"\"><i className=\"fas fa-user\"></i></label>\r\n                    <input type=\"text\" onChange={e => setUsername(e.target.value)} value={username} placeholder=\"Username\" />\r\n                </div>\r\n                <div className=\"form-sect\">\r\n                        <label htmlFor=\"\"><i className=\"fas fa-key\"></i></label>\r\n                    <input type={`${toggleReveal ? 'text': 'password'}`} value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\r\n                    <div className='pswd-reveal' onClick={()=>setReveal(!toggleReveal)}><i className={`fas ${toggleReveal ? 'fa-eye-slash' : 'fa-eye'}`}></i></div>\r\n                </div>\r\n                <div className='form-sect'>\r\n                    <input type=\"submit\" value=\"Login\" />\r\n                </div>\r\n            </form>\r\n            <footer className=\"login-form-footer text-white-50 mt-3\">\r\n                <small>Copyright &copy; { new Date().getFullYear() }; Word Study</small>\r\n            </footer>\r\n        </section>  \r\n    );  \r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n \r\nexport default connect(mapStateToProps, {login, loadUser})(Login);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageExcos.js",["453"],"import {useState, useEffect} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getExcos, deleteExco, updateExco} from '../actions/exco';\r\n\r\nimport Preloader from '../content/Preloader';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nconst ManageExcos = ({excos, getExcos, deleteExco, updateExco, excosLoading}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [name, setName] = useState('');\r\n    let [post, setPost] = useState('');\r\n    let [image, setImage] = useState('');\r\n    let [imageName, setImageName] = useState('');\r\n\r\n    let [currentExco, setCurrentExco] = useState('');\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Exco Management';\r\n        getExcos();\r\n        setIsLoading(excosLoading);\r\n    }, []);\r\n\r\n    const setActiveExco = (id) => {\r\n        setShow(true);\r\n        setCurrentExco(id);\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setImageName(e.target.files[0].name);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (name === '' && post === '' && imageName === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in a field'\r\n            })\r\n        }else{\r\n            let excoFormData = new FormData();\r\n\r\n            if (name){\r\n                excoFormData.append('name', name);\r\n            }\r\n            if (post){\r\n                excoFormData.append('post', post);\r\n            }\r\n            if (image){\r\n                excoFormData.append('photo', image, imageName);\r\n            }\r\n\r\n            updateExco(currentExco, excoFormData);\r\n\r\n            setTimeout(() => {\r\n                setName('');\r\n                setPost('');\r\n                setImage('');\r\n                setImageName('');\r\n            }, 2000);\r\n        }\r\n    } \r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n                title: `Are you sure?`,\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No, cancel!',\r\n                reverseButtons: false\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteExco(id);\r\n                }\r\n            })\r\n    } \r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                excos.map((exco, index) => (\r\n                    <div key={exco.id} className=\"my-admin-card shadow-sm\">\r\n                        <img className='card-img-top' src={exco.photo} alt={`${exco.name} avatar`} />\r\n                        <div className='card-body'>\r\n                            <p className=\"card-text text-center text-dark text-capitalize\">\r\n                                Name: {\r\n                                    exco.name.length < 20 \r\n                                    ? \r\n                                    exco.name\r\n                                    : \r\n                                    <OverlayTrigger\r\n                                        key={index}\r\n                                        placement={'bottom'}\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                                {exco.name}\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <span>{exco.name.slice(0,20)}...</span>\r\n                                    </OverlayTrigger>\r\n                                    }\r\n                                <br />\r\n                                Post: {\r\n                                    exco.post.length < 20 \r\n                                    ?\r\n                                    exco.post \r\n                                    : \r\n                                    <OverlayTrigger\r\n                                        key={exco.id}\r\n                                        placement={'bottom'}\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                                {exco.post}\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <span>{exco.post.slice(0,20)}...</span>\r\n                                    </OverlayTrigger>\r\n                                }\r\n                                <br/>\r\n                            </p>\r\n                            <div className='my-admin-card-overlay'>\r\n                                <button className='' onClick={() => setActiveExco(exco.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                                <button className='bg-danger' onClick={() => handleDelete(exco.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update Exco id:- {currentExco}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createbook-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Name</label>\r\n                            <input className='early-input' onChange={e => setName(e.target.value)} type=\"text\" value={name} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Post</label>\r\n                            <input className='early-input' onChange={e => setPost(e.target.value)} type=\"text\" value={post} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Photo</label>\r\n                            <input className='early-input' onChange={handleFileChange} type=\"file\" />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='createbook-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    excos: state.exco.excos_list,\r\n    excosLoading: state.exco.isLoading\r\n})\r\n\r\nexport default connect(mapStateToProps, {getExcos, updateExco, deleteExco})(ManageExcos);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateEvent.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateExco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateGenre.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateBook.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\RegisterUser.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageEvent.js",["454"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\event.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\event.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Profile.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\ManageProfile.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\user.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\user.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageUsers.js",["455"],"import {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect, useSelector} from 'react-redux';\r\n\r\nimport {deleteUser, getUsers, updateUser} from '../actions/user';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Preloader from '../content/Preloader';\r\n\r\n\r\nconst ManageUsers = ({users, isLoading, getUsers, deleteUser, updateUser}) => {\r\n    let [username, setUsername] = useState('');\r\n    let [email, setEmail] = useState('');\r\n    let [firstName, setFirstName] = useState('');\r\n    let [lastName, setLastName] = useState('');\r\n    let [password, setPassword] = useState('');\r\n    let [confPassword, setConfPassword] = useState('');\r\n    let [image, setImage] = useState('');\r\n    let [imageName, setImageName] = useState('');\r\n    let [phone_no, setPhoneNo] = useState('');\r\n\r\n    let [usersLoading, setUsersLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n    let [showUpdate, setShowUpdate] = useState(false);\r\n    let [currentUser, setCUser] = useState({});\r\n\r\n    let authUser = useSelector(state => state.auth.user);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Manage All Users';\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        setUsersLoading(isLoading);\r\n    }, []);\r\n\r\n    const setCurrentUser = (user) => {\r\n        setCUser(user);\r\n        setShow(true);\r\n    }\r\n\r\n    const setCurrentUserForUpdate = (user) => {\r\n        setCUser(user);\r\n        setShowUpdate(true);\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setImageName(e.target.files[0].name);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        // using the currently set user, we can safely submitted\r\n        if (username === '' && email === '' && firstName === \"\" && lastName === '' && image === '' && phone_no === '' && password === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Please fill in a field'\r\n            })\r\n        }else if(password !== confPassword){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Passwords don\\'t match'\r\n            })\r\n        }else{\r\n            let formData = new FormData();\r\n\r\n            if (username)\r\n                formData.append('username', username);\r\n            if (email)\r\n                formData.append('email', email);\r\n            if (firstName)\r\n                formData.append('first_name', firstName);\r\n            if (lastName)\r\n                formData.append('last_name', lastName);\r\n            if (password)\r\n                formData.append('password', password);\r\n            if (imageName)\r\n                formData.append('actual-img', image, imageName);\r\n            if (phone_no)\r\n                formData.append('phone_no', phone_no);\r\n            \r\n            updateUser(currentUser.id, formData);\r\n\r\n            setTimeout(() => {\r\n                setUsername('');\r\n                setEmail('');\r\n                setFirstName('');\r\n                setLastName('');\r\n                setPassword('');\r\n                setImage('');\r\n                setImageName('');\r\n                setPhoneNo('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n            title: `Are you sure?`,\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: false\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteUser(id);\r\n            }\r\n        })\r\n    }\r\n\r\n    const labelStyles = {\r\n        fontSize: '1.2rem'\r\n    }, fieldStyles = {\r\n        color: '#999',\r\n        fontSize: '1.2rem'\r\n    }, btnStyles = {\r\n        fontSize: '1rem',\r\n        padding: '8px 10px',\r\n        outline: 'none',\r\n        border: 'none'\r\n    }\r\n\r\n    return (\r\n        <section className='manage-books'>\r\n            {\r\n                usersLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                users?.map(user => \r\n                    user.id !== authUser.id \r\n                    ?\r\n                    <div className='card' key={user.id}>\r\n                        <img src={user.profile?.image} alt={`${user.username} avatar`} />\r\n                        <div className='card-body text-center'>\r\n                            <div>\r\n                                <Link to='#' className='text-dark' style={{textDecoration: 'none'}} onClick={() => setCurrentUser(user)}>{user.username}</Link>\r\n                            </div>\r\n                            <div className='btn-group mt-3'>\r\n                                <button style={btnStyles} onClick={() => setCurrentUserForUpdate(user)} className='btn-primary'>Update <i className='fas fa-pen ml-2'></i></button>\r\n                                <button style={btnStyles} onClick={() => handleDelete(user.id)} className='btn-danger'>Delete <i className='ml-2 fas fa-trash-alt'></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n                )\r\n            }\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                scrollable={true}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\" className='text-capitalize'>\r\n                    {currentUser.username} Details\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <div className='row profile-warp text-center text-uppercase'>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>First Name</label>\r\n                        <p style={fieldStyles}>{currentUser.first_name}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Last Name</label>\r\n                        <p style={fieldStyles}>{currentUser.last_name}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Username</label>\r\n                        <p style={fieldStyles}>{currentUser.username}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Email</label>\r\n                        <p style={fieldStyles}>{currentUser.email}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Phone Number</label>\r\n                        <p style={fieldStyles}>{currentUser?.profile?.phone_no}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Super User</label>\r\n                        <p style={fieldStyles}>{currentUser.is_superuser ? 'True' : 'False'}</p>\r\n                    </div>\r\n                </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal\r\n                size='lg'\r\n                show={showUpdate}\r\n                onHide={() => setShowUpdate(false)}\r\n                scrollable={true}\r\n                dialogClassName=\"modal-100w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update for {currentUser.username}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='registeruser-form' onSubmit={e => e.preventDefault()}>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>First Name</label>\r\n                                <input className='early-input' onChange={e => setFirstName(e.target.value)} type=\"text\" value={firstName} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Last Name</label>\r\n                                <input className='early-input' onChange={e => setLastName(e.target.value)} type=\"text\" value={lastName} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Username</label>\r\n                                <input className='early-input' onChange={e => setUsername(e.target.value)} type=\"text\" value={username} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Email</label>\r\n                                <input className='early-input' onChange={e => setEmail(e.target.value)} type=\"text\" value={email} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Password</label>\r\n                                <input className='early-input' onChange={e => setPassword(e.target.value)} type=\"password\" value={password} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Confirm Password</label>\r\n                                <input className='early-input' onChange={e => setConfPassword(e.target.value)} type=\"password\" value={confPassword} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Image</label>\r\n                                <input className='early-input' style={{overflow:'hidden'}} onChange={handleFileChange} type=\"file\" />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Phone Number</label>\r\n                                <input className='early-input' value={phone_no} onChange={e => setPhoneNo(e.target.value)} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={() => handleSubmit()} className='registeruser-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.user.users,\r\n    isLoading: state.user.isLoading\r\n});\r\n \r\nexport default connect(mapStateToProps, {getUsers, deleteUser, updateUser})(ManageUsers);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageMembers.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\TablePreloader.js",["456"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageContact.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManagePrayers.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\PageNotFound.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\index.js",[],["457","458"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\App.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\store.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\routes\\RouteControl.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\forms\\Contact.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Library.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Alert.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Home.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\forms\\Register.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\PageNotFound.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageUsers.js",["459"],"import {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect, useSelector} from 'react-redux';\r\n\r\nimport {deleteUser, getUsers, updateUser} from '../actions/user';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Preloader from '../content/Preloader';\r\n\r\n\r\nconst ManageUsers = ({users, isLoading, getUsers, deleteUser, updateUser}) => {\r\n    let [username, setUsername] = useState('');\r\n    let [email, setEmail] = useState('');\r\n    let [firstName, setFirstName] = useState('');\r\n    let [lastName, setLastName] = useState('');\r\n    let [password, setPassword] = useState('');\r\n    let [confPassword, setConfPassword] = useState('');\r\n    let [image, setImage] = useState('');\r\n    let [imageName, setImageName] = useState('');\r\n    let [phone_no, setPhoneNo] = useState('');\r\n\r\n    let [usersLoading, setUsersLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n    let [showUpdate, setShowUpdate] = useState(false);\r\n    let [currentUser, setCUser] = useState({});\r\n\r\n    let authUser = useSelector(state => state.auth.user);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Manage All Users';\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        setUsersLoading(isLoading);\r\n    }, []);\r\n\r\n    const setCurrentUser = (user) => { // to handle setting the active user \r\n        setCUser(user);\r\n        setShow(true);\r\n    }\r\n\r\n    const setCurrentUserForUpdate = (user) => { // to ensure the modal targets the correct user\r\n        setCUser(user);\r\n        setShowUpdate(true);\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setImageName(e.target.files[0].name);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        // using the currently set user, we can safely submitted\r\n        if (username === '' && email === '' && firstName === \"\" && lastName === '' && image === '' && phone_no === '' && password === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Please fill in a field'\r\n            })\r\n        }else if(password !== confPassword){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Passwords don\\'t match'\r\n            })\r\n        }else{\r\n            let formData = new FormData();\r\n\r\n            if (username)\r\n                formData.append('username', username);\r\n            if (email)\r\n                formData.append('email', email);\r\n            if (firstName)\r\n                formData.append('first_name', firstName);\r\n            if (lastName)\r\n                formData.append('last_name', lastName);\r\n            if (password)\r\n                formData.append('password', password);\r\n            if (imageName)\r\n                formData.append('actual-img', image, imageName);\r\n            if (phone_no)\r\n                formData.append('phone_no', phone_no);\r\n            \r\n            updateUser(currentUser.id, formData);\r\n\r\n            setTimeout(() => {\r\n                setUsername('');\r\n                setEmail('');\r\n                setFirstName('');\r\n                setLastName('');\r\n                setPassword('');\r\n                setImage('');\r\n                setImageName('');\r\n                setPhoneNo('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n            title: `Are you sure?`,\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: false\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteUser(id);\r\n            }\r\n        })\r\n    }\r\n\r\n    const labelStyles = {\r\n        fontSize: '1.2rem'\r\n    }, fieldStyles = {\r\n        color: '#999',\r\n        fontSize: '1.2rem'\r\n    }, btnStyles = {\r\n        fontSize: '1rem',\r\n        padding: '8px 10px',\r\n        outline: 'none',\r\n        border: 'none'\r\n    }\r\n\r\n    return (\r\n        <section className='manage-books'>\r\n            {\r\n                usersLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                typeof users === Array && users.map(user => \r\n                    user.id !== authUser.id \r\n                    ?\r\n                    <div className='card' key={user.id}>\r\n                        <img src={user.profile?.image} alt={`${user.username} avatar`} />\r\n                        <div className='card-body text-center'>\r\n                            <div>\r\n                                <Link to='#' className='text-dark' style={{textDecoration: 'none'}} onClick={() => setCurrentUser(user)}>{user.username}</Link>\r\n                            </div>\r\n                            <div className='btn-group mt-3'>\r\n                                <button style={btnStyles} onClick={() => setCurrentUserForUpdate(user)} className='btn-primary'>Update <i className='fas fa-pen ml-2'></i></button>\r\n                                <button style={btnStyles} onClick={() => handleDelete(user.id)} className='btn-danger'>Delete <i className='ml-2 fas fa-trash-alt'></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n                )\r\n            }\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                scrollable={true}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\" className='text-capitalize'>\r\n                    {currentUser.username} Details\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <div className='row profile-warp text-center text-uppercase'>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>First Name</label>\r\n                        <p style={fieldStyles}>{currentUser.first_name}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Last Name</label>\r\n                        <p style={fieldStyles}>{currentUser.last_name}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Username</label>\r\n                        <p style={fieldStyles}>{currentUser.username}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Email</label>\r\n                        <p style={fieldStyles}>{currentUser.email}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Phone Number</label>\r\n                        <p style={fieldStyles}>{currentUser?.profile?.phone_no}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Super User</label>\r\n                        <p style={fieldStyles}>{currentUser.is_superuser ? 'True' : 'False'}</p>\r\n                    </div>\r\n                </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal\r\n                size='lg'\r\n                show={showUpdate}\r\n                onHide={() => setShowUpdate(false)}\r\n                scrollable={true}\r\n                dialogClassName=\"modal-100w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update for {currentUser.username}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='registeruser-form' onSubmit={e => e.preventDefault()}>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>First Name</label>\r\n                                <input className='early-input' onChange={e => setFirstName(e.target.value)} type=\"text\" value={firstName} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Last Name</label>\r\n                                <input className='early-input' onChange={e => setLastName(e.target.value)} type=\"text\" value={lastName} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Username</label>\r\n                                <input className='early-input' onChange={e => setUsername(e.target.value)} type=\"text\" value={username} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Email</label>\r\n                                <input className='early-input' onChange={e => setEmail(e.target.value)} type=\"text\" value={email} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Password</label>\r\n                                <input className='early-input' onChange={e => setPassword(e.target.value)} type=\"password\" value={password} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Confirm Password</label>\r\n                                <input className='early-input' onChange={e => setConfPassword(e.target.value)} type=\"password\" value={confPassword} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Image</label>\r\n                                <input className='early-input' style={{overflow:'hidden'}} onChange={handleFileChange} type=\"file\" />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Phone Number</label>\r\n                                <input className='early-input' value={phone_no} onChange={e => setPhoneNo(e.target.value)} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={() => handleSubmit()} className='registeruser-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.user.users,\r\n    isLoading: state.user.isLoading\r\n});\r\n \r\nexport default connect(mapStateToProps, {getUsers, deleteUser, updateUser})(ManageUsers);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageEvent.js",["460"],"import {useState, useEffect} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getEvents, deleteEvent, updateEvent} from '../actions/event';\r\n\r\nimport Preloader from '../content/Preloader';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nconst ManageEvent = ({events, getEvents, updateEvent, deleteEvent}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [currentEvent, setCurrentEvent] = useState('');\r\n\r\n    let [title, setTitle] = useState('');\r\n    let [venue, setVenue] = useState('');\r\n    let [theme, setTheme] = useState('');\r\n    let [date, setDate] = useState('');\r\n    let [time, setTime] = useState('');\r\n    \r\n    useEffect(() => {\r\n        document.title = 'Word Study | Event Management';\r\n        getEvents();\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    const setActiveEvent = (id) => {\r\n        setShow(true);\r\n        setCurrentEvent(id);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (title === '' && venue === '' && theme === '' && date === '' && time === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in a field'\r\n            })\r\n        }else{\r\n            let eventData = {};\r\n\r\n            if (title){\r\n                eventData['title'] = title;\r\n            }\r\n            if (venue){\r\n                eventData['venue'] = venue;\r\n            }\r\n            if (theme){\r\n                eventData['theme'] = theme;\r\n            }\r\n            if (date){\r\n                eventData['date'] = date;\r\n            }\r\n            if (time){\r\n                eventData['time'] = time;\r\n            }\r\n\r\n            updateEvent(currentEvent, eventData);\r\n\r\n            setTimeout(() => {\r\n                setTitle('');\r\n                setVenue('');\r\n                setTheme('');\r\n                setDate('');\r\n                setTime('');\r\n            }, 2000);\r\n        }\r\n    } \r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n                title: `Are you sure?`,\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No, cancel!',\r\n                reverseButtons: false\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteEvent(id);\r\n                }\r\n            })\r\n    } \r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                typeof events === Array && events.map((evt, index) => (\r\n                    <div key={evt.id} className=\"my-admin-card shadow-sm\">\r\n                        <div className=\"d-flex justify-content-center align-items-center mb-3\">\r\n                            <small>Event</small>\r\n                        </div>\r\n                        <p className=\"card-text text-center text-dark text-capitalize\">\r\n                            Title: {\r\n                                evt.title.length < 20 \r\n                                ? \r\n                                evt.title \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {evt.title}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{evt.title.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            <br />\r\n                            Theme: {\r\n                                evt.theme.length < 20 \r\n                                ? \r\n                                evt.theme \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index+1}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {evt.theme}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{evt.theme.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            <br />\r\n                            Venue: {\r\n                                evt.venue.length < 20 \r\n                                ?\r\n                                evt.venue \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index+2}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {evt.venue}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{evt.venue.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                            }\r\n                            <br/>\r\n                            Date: {evt.date}\r\n                            <br/>\r\n                            Time: {evt.time.slice(0,5)}\r\n                        </p>\r\n                        <div className='my-admin-card-overlay'>\r\n                            <button className='' onClick={() => setActiveEvent(evt.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                            <button className='bg-danger' onClick={() => handleDelete(evt.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                scrollable={true}\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update Event id:- {currentEvent}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createevent-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Title</label>\r\n                            <input className='early-input' onChange={e => setTitle(e.target.value)} type=\"text\" value={title} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Venue</label>\r\n                            <input className='early-input' onChange={e => setVenue(e.target.value)} type=\"text\" value={venue} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Theme</label>\r\n                            <input className='early-input' onChange={e => setTheme(e.target.value)} type=\"text\" value={theme} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Date</label>\r\n                            <input className='early-input' type=\"date\" onChange={e => setDate(e.target.value)} value={date} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Time</label>\r\n                            <input className='early-input' type=\"time\" onChange={e => setTime(e.target.value)} value={time} />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='createevent-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    events: state.event.events,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEvents, deleteEvent, updateEvent})(ManageEvent);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageGenre.js",["461"],"import {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getCategories, deleteGenre, updateGenre } from '../actions/category';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport Preloader from '../content/Preloader';\r\n\r\n\r\nconst ManageGenre = ({genres, getCategories, deleteGenre, updateGenre}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [name, setName] = useState('');\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [currentGenre, setCurrentGenre] = useState('');\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Manage Genre';\r\n        getCategories();\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    const setActiveEvent = (id) => {\r\n        setShow(true);\r\n        setCurrentGenre(id);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (name === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in the blank field'\r\n            })\r\n        }else{\r\n            let genreData = {};\r\n\r\n            if (name){\r\n                genreData['name'] = name;\r\n            }\r\n\r\n            updateGenre(currentGenre, genreData);\r\n\r\n            setTimeout(() => {\r\n                setName('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n            title: `Are you sure?`,\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: false\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteGenre(id);\r\n            }\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                typeof genres === Array && genres.map(genre => \r\n                    <div key={genre.id} className=\"my-admin-card shadow-sm\">\r\n                        <div className='text-center mb-2'>\r\n                            <small >Genre</small>\r\n                        </div>\r\n                        <h3 className=\"card-text text-center text-dark text-capitalize\">\r\n                            {genre.name}\r\n                        </h3>\r\n                        <div className='my-admin-card-overlay mt-4'>\r\n                            <button className='' onClick={() => setActiveEvent(genre.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                            <button className='bg-danger' onClick={() => handleDelete(genre.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        Update Genre id:- {currentGenre}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='creategenre-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Name</label>\r\n                            <input className='early-input' onChange={e => setName(e.target.value)} type=\"text\" value={name} />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='creategenre-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n \r\n\r\nconst mapStateToProps = state => ({\r\n    genres: state.category.categories\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getCategories, deleteGenre, updateGenre})(ManageGenre);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageContact.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageExcos.js",["462"],"import {useState, useEffect} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getExcos, deleteExco, updateExco} from '../actions/exco';\r\n\r\nimport Preloader from '../content/Preloader';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nconst ManageExcos = ({excos, getExcos, deleteExco, updateExco, excosLoading}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [name, setName] = useState('');\r\n    let [post, setPost] = useState('');\r\n    let [image, setImage] = useState('');\r\n    let [imageName, setImageName] = useState('');\r\n\r\n    let [currentExco, setCurrentExco] = useState('');\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Exco Management';\r\n        getExcos();\r\n        setIsLoading(excosLoading);\r\n    }, []);\r\n\r\n    const setActiveExco = (id) => {\r\n        setShow(true);\r\n        setCurrentExco(id);\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setImageName(e.target.files[0].name);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (name === '' && post === '' && imageName === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in a field'\r\n            })\r\n        }else{\r\n            let excoFormData = new FormData();\r\n\r\n            if (name){\r\n                excoFormData.append('name', name);\r\n            }\r\n            if (post){\r\n                excoFormData.append('post', post);\r\n            }\r\n            if (image){\r\n                excoFormData.append('photo', image, imageName);\r\n            }\r\n\r\n            updateExco(currentExco, excoFormData);\r\n\r\n            setTimeout(() => {\r\n                setName('');\r\n                setPost('');\r\n                setImage('');\r\n                setImageName('');\r\n            }, 2000);\r\n        }\r\n    } \r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n                title: `Are you sure?`,\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No, cancel!',\r\n                reverseButtons: false\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteExco(id);\r\n                }\r\n            })\r\n    } \r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                typeof excos === Array && excos.map((exco, index) => (\r\n                    <div key={exco.id} className=\"my-admin-card shadow-sm\">\r\n                        <img className='card-img-top' src={exco.photo} alt={`${exco.name} avatar`} />\r\n                        <div className='card-body'>\r\n                            <p className=\"card-text text-center text-dark text-capitalize\">\r\n                                Name: {\r\n                                    exco.name.length < 20 \r\n                                    ? \r\n                                    exco.name\r\n                                    : \r\n                                    <OverlayTrigger\r\n                                        key={index}\r\n                                        placement={'bottom'}\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                                {exco.name}\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <span>{exco.name.slice(0,20)}...</span>\r\n                                    </OverlayTrigger>\r\n                                    }\r\n                                <br />\r\n                                Post: {\r\n                                    exco.post.length < 20 \r\n                                    ?\r\n                                    exco.post \r\n                                    : \r\n                                    <OverlayTrigger\r\n                                        key={exco.id}\r\n                                        placement={'bottom'}\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                                {exco.post}\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <span>{exco.post.slice(0,20)}...</span>\r\n                                    </OverlayTrigger>\r\n                                }\r\n                                <br/>\r\n                            </p>\r\n                            <div className='my-admin-card-overlay'>\r\n                                <button className='' onClick={() => setActiveExco(exco.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                                <button className='bg-danger' onClick={() => handleDelete(exco.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update Exco id:- {currentExco}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createbook-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Name</label>\r\n                            <input className='early-input' onChange={e => setName(e.target.value)} type=\"text\" value={name} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Post</label>\r\n                            <input className='early-input' onChange={e => setPost(e.target.value)} type=\"text\" value={post} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Photo</label>\r\n                            <input className='early-input' onChange={handleFileChange} type=\"file\" />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='createbook-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    excos: state.exco.excos_list,\r\n    excosLoading: state.exco.isLoading\r\n})\r\n\r\nexport default connect(mapStateToProps, {getExcos, updateExco, deleteExco})(ManageExcos);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageBooks.js",["463"],"import {useState, useEffect} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getBooks, deleteBook, updateBook} from '../actions/book';\r\nimport {getCategories as getGenres} from '../actions/category';\r\n\r\nimport Preloader from '../content/Preloader';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport './styles/books.css';\r\n\r\n\r\nconst ManageBooks = ({books, genres, booksLoading, getBooks, deleteBook, updateBook, getGenres}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [title, setTitle] = useState('');\r\n    let [author, setAuthor] = useState('');\r\n    let [file, setFile] = useState('');\r\n    let [fileName, setFileName] = useState('');\r\n    let [selectedGenre, setGenre] = useState('');\r\n\r\n    let [currentBook, setCurrentBook] = useState('');\r\n    \r\n    useEffect(() => {\r\n        document.title = 'Word Study | Book Management';\r\n        getBooks();\r\n        getGenres();\r\n        setIsLoading(booksLoading);\r\n    }, []);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n        setFileName(e.target.files[0].name);\r\n    }\r\n\r\n    const setActiveBook = (id) => {\r\n        setShow(true);\r\n        setCurrentBook(id);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (title === '' && author === '' && fileName === '' && selectedGenre === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in a field'\r\n            })\r\n        }else{\r\n            let bookFormData = new FormData();\r\n\r\n            if (title){\r\n                bookFormData.append('title', title);\r\n            }\r\n            if (author){\r\n                bookFormData.append('author', author);\r\n            }\r\n            if (file){\r\n                bookFormData.append('file', file, fileName);\r\n            }\r\n            if (selectedGenre){\r\n                bookFormData.append('genre', JSON.stringify({\r\n                    name: selectedGenre\r\n                })); \r\n            }\r\n\r\n            updateBook(currentBook, bookFormData);\r\n\r\n            setTimeout(() => {\r\n                setTitle('');\r\n                setAuthor('');\r\n                setFile('');\r\n                setFileName('');\r\n                setGenre('');  \r\n            }, 2000);\r\n        }\r\n    } \r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n                title: `Are you sure?`,\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No, cancel!',\r\n                reverseButtons: false\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteBook(id);\r\n                }\r\n            })\r\n    } \r\n\r\n    return ( \r\n        <section className='manage-grid'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader size='md' />\r\n                :\r\n                typeof books === Array && books.map((book, index) => (\r\n                    <div key={book.id} className=\"my-admin-card shadow-sm\">\r\n                        <div className=\"d-flex justify-content-center align-items-center mb-3\">\r\n                            <small className='text-dark'><i className='fas fa-book-open fa-3x'></i></small>\r\n                        </div>\r\n                        <p className=\"card-text text-center text-dark text-capitalize\">\r\n                            Title: {\r\n                                book.title.length < 20 \r\n                                ? \r\n                                book.title \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {book.title}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{book.title.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            <br />\r\n                            Author: {\r\n                                book.author.length < 20 \r\n                                ?\r\n                                book.author \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={book.id}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {book.author}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{book.author.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                            }\r\n                            <br/>\r\n                            Genre: {book.genre.name < 20 ? book.genre.name : book.genre.name.slice(0, 20)}\r\n                            <br />\r\n                            File: {\r\n                                book.file.length < 30\r\n                                ?\r\n                                book.file\r\n                                :\r\n                                <OverlayTrigger\r\n                                    key={book.id}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {book.file}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{book.file.slice(0,25)}...</span>\r\n                                </OverlayTrigger>\r\n                            }\r\n                        </p>\r\n                        <div className='my-admin-card-overlay'>\r\n                            <button className='' onClick={() => setActiveBook(book.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                            <button className='bg-danger' onClick={() => handleDelete(book.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                scrollable={true}\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update Book id:- {currentBook}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createbook-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Title</label>\r\n                            <input className='early-input' onChange={e => setTitle(e.target.value)} type=\"text\" value={title} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Author</label>\r\n                            <input className='early-input' onChange={e => setAuthor(e.target.value)} type=\"text\" value={author} />\r\n                        </div>\r\n                        <div>\r\n                            <label>File</label>\r\n                            <input className='early-input' onChange={handleFileChange} type=\"file\" />\r\n                        </div>\r\n                        <div>\r\n                            <label>Genre</label>\r\n                            <select onChange={e => setGenre(e.target.value)} >\r\n                                <option value=\"\" key=\"0\">All</option>\r\n                                {\r\n                                    typeof genres === Array && genres.map(genre => \r\n                                        <option value={genre.name} key={genre.id}>{genre.name}</option>    \r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='createbook-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    books: state.book.books,\r\n    booksLoading: state.book.isLoading,\r\n    genres: state.category.categories\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBooks, updateBook, deleteBook, getGenres})(ManageBooks);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManageMembers.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\ManagePrayers.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\Dashboard.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\Profile.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\Login.js",["464"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\constants.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\Book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\Preloader.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Nav.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\layout\\Footer.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\layout\\AdMain.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\exco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\event.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\auth.js",["465"],"import axios from 'axios';\r\nimport {createMessage} from './message';\r\nimport {returnErrors} from './error';\r\nimport {BASE_URL} from '../constants';\r\nimport checkResponseData from './check';\r\n\r\nimport {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from './types';\r\n\r\n\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // load user\r\n    dispatch({ type: USER_LOADING });\r\n\r\n\r\n    axios.get(`${BASE_URL}/accounts/auth/user`, tokenConfig(getState))\r\n        .then(res => dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch({ type: AUTH_ERROR });\r\n        })\r\n} \r\n\r\nexport const login = ({username, password}) => dispatch => {\r\n     // request body\r\n     const credentials = JSON.stringify({\r\n        username,\r\n        password\r\n    });\r\n\r\n\r\n    // headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": 'application/json'\r\n        }\r\n    };\r\n\r\n    axios.post(`${BASE_URL}/accounts/auth/login`, credentials, config)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch(createMessage({ loggedIn: `Welcome ${res.data.user.username}`}));\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({type: LOGIN_FAIL});\r\n            dispatch(createMessage({loginFailed: 'Login Failed!'}));\r\n        })\r\n}\r\n\r\n\r\nexport const register = (data) => (dispatch) => {\r\n    // stringify data here\r\n\r\n    // headers\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n            // multipart/form-data\r\n        }\r\n    };\r\n\r\n    const registerFormData = new FormData();\r\n    \r\n    registerFormData.append('username', data.username);\r\n    registerFormData.append('password', data.password);\r\n    registerFormData.append('email', data.email);\r\n    registerFormData.append('first_name', data.first_name);\r\n    registerFormData.append('last_name', data.last_name);\r\n\r\n    if (data.image !== null)\r\n        registerFormData.append('actual-img', data.image, data.image.name);\r\n    else\r\n        registerFormData.append('actual-img', null);\r\n    registerFormData.append('profile', JSON.stringify({\r\n        image: '', \r\n        phone_no: data.phone_no,\r\n    }));\r\n\r\n    axios.post(`${BASE_URL}/accounts/auth/register`, registerFormData, config)\r\n        .then(res => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch(createMessage({ registered: `Welcome ${res.data.user.username}`}));\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({type: REGISTER_FAIL});\r\n        });\r\n}\r\n\r\nexport const updateProfile = (data) => (dispatch, getState) => {\r\n\r\n}\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n    axios.post(`${BASE_URL}/accounts/auth/logout`, null, tokenConfig(getState))\r\n    .then(res => dispatch({\r\n        type: LOGOUT_SUCCESS\r\n    }))\r\n    .catch(e => {\r\n        dispatch(returnErrors(e.response.data, e.response.status));\r\n        dispatch({ type: LOGOUT_FAIL });\r\n    })\r\n}\r\n\r\nexport const tokenConfig = getState => {\r\n    // get the token from state     \r\n    const token = getState().auth.token // we're looking into our redux state, under auth reducer then the current state\r\n\r\n    // headers \r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // if token, add to headers config \r\n    if (token)\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n\r\n    return config;\r\n}","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\category.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\content\\TablePreloader.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\user.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\message.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\error.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\actions\\check.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateBook.js",["466"],"import {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {addBook} from '../../actions/book';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport '../styles/createbook.css';\r\n\r\nconst CreateBook = ({show, setShow, addBook}) => {\r\n    let [genres, setGenres] = useState([]);\r\n    let [title, setTitle] = useState('');\r\n    let [author, setAuthor] = useState('');\r\n    let [file, setFile] = useState('');\r\n    let [fileName, setFileName] = useState('');\r\n    let [selectedGenre, setGenre] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchGenres = async() => {\r\n            let result = await axios.get('/genres');\r\n\r\n            if (typeof result.data === Array)\r\n                setGenres(result.data);\r\n            setGenres(genres);\r\n        }\r\n\r\n        fetchGenres();\r\n    }, []);\r\n\r\n    const handleSubmit = () => {\r\n        if (title === '' || author === '' || file === \"\" || selectedGenre === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Please fill in all fields'\r\n            })\r\n        }else{\r\n            let book_data = {\r\n                title: title,\r\n                author: author,\r\n                file: file,\r\n                fileName: fileName,\r\n                genre: selectedGenre\r\n            }\r\n\r\n            addBook(book_data);\r\n            \r\n            setTimeout(() => {\r\n                setTitle('');\r\n                setAuthor('');\r\n                setFile('');\r\n                setFileName('');\r\n                setGenre('');   \r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n        setFileName(e.target.files[0].name);\r\n    }\r\n\r\n    return (  \r\n        <>\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Add Book\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createbook-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Title</label>\r\n                            <input className='early-input' onChange={e => setTitle(e.target.value)} type=\"text\" value={title} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Author</label>\r\n                            <input className='early-input' onChange={e => setAuthor(e.target.value)} type=\"text\" value={author} />\r\n                        </div>\r\n                        <div>\r\n                            <label>File</label>\r\n                            <input className='early-input' onChange={handleFileChange} type=\"file\" />\r\n                        </div>\r\n                        <div>\r\n                            <label>Genre</label>\r\n                            <select onChange={e => setGenre(e.target.value)} >\r\n                                <option value=\"\" key=\"0\">All</option>\r\n                                {\r\n                                    genres.length > 0\r\n                                    ?\r\n                                    genres.map(genre => \r\n                                     \r\n                                       <option value={genre.name} key={genre.id}>{genre.name}</option>    \r\n                                    )\r\n                                    :\r\n                                    <option value=\"\" key=\"1\">Couldn't load genres or No genres added yet</option>\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleSubmit} className='createbook-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\n \r\nexport default connect(null, {addBook})(CreateBook);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateGenre.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateEvent.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\CreateExco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\RegisterUser.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\admin\\modals\\ManageProfile.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\message.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\error.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\auth.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\category.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\user.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\exco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend_with_react\\wordstudy.lmu\\frontend\\src\\reducers\\event.js",[],{"ruleId":"467","replacedBy":"468"},{"ruleId":"469","replacedBy":"470"},{"ruleId":"471","severity":1,"message":"472","line":23,"column":8,"nodeType":"473","endLine":23,"endColumn":10,"suggestions":"474"},{"ruleId":"471","severity":1,"message":"475","line":34,"column":8,"nodeType":"473","endLine":34,"endColumn":10,"suggestions":"476"},{"ruleId":"471","severity":1,"message":"477","line":23,"column":8,"nodeType":"473","endLine":23,"endColumn":19,"suggestions":"478"},{"ruleId":"471","severity":1,"message":"479","line":30,"column":8,"nodeType":"473","endLine":30,"endColumn":10,"suggestions":"480"},{"ruleId":"471","severity":1,"message":"481","line":30,"column":8,"nodeType":"473","endLine":30,"endColumn":10,"suggestions":"482"},{"ruleId":"471","severity":1,"message":"483","line":37,"column":8,"nodeType":"473","endLine":37,"endColumn":10,"suggestions":"484"},{"ruleId":"485","severity":1,"message":"486","line":2,"column":8,"nodeType":"487","messageId":"488","endLine":2,"endColumn":17},{"ruleId":"467","replacedBy":"489"},{"ruleId":"469","replacedBy":"490"},{"ruleId":"471","severity":1,"message":"483","line":37,"column":8,"nodeType":"473","endLine":37,"endColumn":10,"suggestions":"491"},{"ruleId":"471","severity":1,"message":"481","line":30,"column":8,"nodeType":"473","endLine":30,"endColumn":10,"suggestions":"492"},{"ruleId":"471","severity":1,"message":"472","line":23,"column":8,"nodeType":"473","endLine":23,"endColumn":10,"suggestions":"493"},{"ruleId":"471","severity":1,"message":"479","line":30,"column":8,"nodeType":"473","endLine":30,"endColumn":10,"suggestions":"494"},{"ruleId":"471","severity":1,"message":"475","line":34,"column":8,"nodeType":"473","endLine":34,"endColumn":10,"suggestions":"495"},{"ruleId":"471","severity":1,"message":"477","line":23,"column":8,"nodeType":"473","endLine":23,"endColumn":19,"suggestions":"496"},{"ruleId":"485","severity":1,"message":"497","line":5,"column":8,"nodeType":"487","messageId":"488","endLine":5,"endColumn":25},{"ruleId":"471","severity":1,"message":"498","line":28,"column":8,"nodeType":"473","endLine":28,"endColumn":10,"suggestions":"499"},"no-native-reassign",["500"],"no-negated-in-lhs",["501"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array. If 'getCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["502"],"React Hook useEffect has missing dependencies: 'booksLoading', 'getBooks', and 'getGenres'. Either include them or remove the dependency array. If 'getBooks' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["503"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array. If 'loadUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["504"],"React Hook useEffect has missing dependencies: 'excosLoading' and 'getExcos'. Either include them or remove the dependency array. If 'getExcos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["505"],"React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array. If 'getEvents' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["506"],"React Hook useEffect has missing dependencies: 'getUsers' and 'isLoading'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["507"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["500"],["501"],["508"],["509"],["510"],["511"],["512"],["513"],"'checkResponseData' is defined but never used.","React Hook useEffect has a missing dependency: 'genres'. Either include it or remove the dependency array. You can also do a functional update 'setGenres(g => ...)' if you only need 'genres' in the 'setGenres' call.",["514"],"no-global-assign","no-unsafe-negation",{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"525","fix":"527"},{"desc":"523","fix":"528"},{"desc":"515","fix":"529"},{"desc":"521","fix":"530"},{"desc":"517","fix":"531"},{"desc":"519","fix":"532"},{"desc":"533","fix":"534"},"Update the dependencies array to be: [getCategories]",{"range":"535","text":"536"},"Update the dependencies array to be: [booksLoading, getBooks, getGenres]",{"range":"537","text":"538"},"Update the dependencies array to be: [loadUser, submitted]",{"range":"539","text":"540"},"Update the dependencies array to be: [excosLoading, getExcos]",{"range":"541","text":"542"},"Update the dependencies array to be: [getEvents]",{"range":"543","text":"544"},"Update the dependencies array to be: [getUsers, isLoading]",{"range":"545","text":"546"},{"range":"547","text":"546"},{"range":"548","text":"544"},{"range":"549","text":"536"},{"range":"550","text":"542"},{"range":"551","text":"538"},{"range":"552","text":"540"},"Update the dependencies array to be: [genres]",{"range":"553","text":"554"},[713,715],"[getCategories]",[1151,1153],"[booksLoading, getBooks, getGenres]",[665,676],"[loadUser, submitted]",[958,960],"[excosLoading, getExcos]",[987,989],"[getEvents]",[1313,1315],"[getUsers, isLoading]",[1313,1315],[987,989],[713,715],[958,960],[1151,1153],[665,676],[885,887],"[genres]"]